// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=s0, b=s1, c=s2, d=s3, e=s4, f=s5, g=s6, h=s7);
    DMux8Way(in=s0, sel=address[3..5], a=t0, b=t1, c=t2, d=t3, e=t4, f=t5, g=t6, h=t7);
    DMux8Way(in=s1, sel=address[3..5], a=t8, b=t9, c=t10, d=t11, e=t12, f=t13, g=t14, h=t15);
    DMux8Way(in=s2, sel=address[3..5], a=t16, b=t17, c=t18, d=t19, e=t20, f=t21, g=t22, h=t23);
    DMux8Way(in=s3, sel=address[3..5], a=t24, b=t25, c=t26, d=t27, e=t28, f=t29, g=t30, h=t31);
    DMux8Way(in=s4, sel=address[3..5], a=t32, b=t33, c=t34, d=t35, e=t36, f=t37, g=t38, h=t39);
    DMux8Way(in=s5, sel=address[3..5], a=t40, b=t41, c=t42, d=t43, e=t44, f=t45, g=t46, h=t47);
    DMux8Way(in=s6, sel=address[3..5], a=t48, b=t49, c=t50, d=t51, e=t52, f=t53, g=t54, h=t55);
    DMux8Way(in=s7, sel=address[3..5], a=t56, b=t57, c=t58, d=t59, e=t60, f=t61, g=t62, h=t63);
    Register(in=in, load=t0, out=r0);
    Register(in=in, load=t1, out=r1);
    Register(in=in, load=t2, out=r2);
    Register(in=in, load=t3, out=r3);
    Register(in=in, load=t4, out=r4);
    Register(in=in, load=t5, out=r5);
    Register(in=in, load=t6, out=r6);
    Register(in=in, load=t7, out=r7);
    Register(in=in, load=t8, out=r8);
    Register(in=in, load=t9, out=r9);
    Register(in=in, load=t10, out=r10);
    Register(in=in, load=t11, out=r11);
    Register(in=in, load=t12, out=r12);
    Register(in=in, load=t13, out=r13);
    Register(in=in, load=t14, out=r14);
    Register(in=in, load=t15, out=r15);
    Register(in=in, load=t16, out=r16);
    Register(in=in, load=t17, out=r17);
    Register(in=in, load=t18, out=r18);
    Register(in=in, load=t19, out=r19);
    Register(in=in, load=t20, out=r20);
    Register(in=in, load=t21, out=r21);
    Register(in=in, load=t22, out=r22);
    Register(in=in, load=t23, out=r23);
    Register(in=in, load=t24, out=r24);
    Register(in=in, load=t25, out=r25);
    Register(in=in, load=t26, out=r26);
    Register(in=in, load=t27, out=r27);
    Register(in=in, load=t28, out=r28);
    Register(in=in, load=t29, out=r29);
    Register(in=in, load=t30, out=r30);
    Register(in=in, load=t31, out=r31);
    Register(in=in, load=t32, out=r32);
    Register(in=in, load=t33, out=r33);
    Register(in=in, load=t34, out=r34);
    Register(in=in, load=t35, out=r35);
    Register(in=in, load=t36, out=r36);
    Register(in=in, load=t37, out=r37);
    Register(in=in, load=t38, out=r38);
    Register(in=in, load=t39, out=r39);
    Register(in=in, load=t40, out=r40);
    Register(in=in, load=t41, out=r41);
    Register(in=in, load=t42, out=r42);
    Register(in=in, load=t43, out=r43);
    Register(in=in, load=t44, out=r44);
    Register(in=in, load=t45, out=r45);
    Register(in=in, load=t46, out=r46);
    Register(in=in, load=t47, out=r47);
    Register(in=in, load=t48, out=r48);
    Register(in=in, load=t49, out=r49);
    Register(in=in, load=t50, out=r50);
    Register(in=in, load=t51, out=r51);
    Register(in=in, load=t52, out=r52);
    Register(in=in, load=t53, out=r53);
    Register(in=in, load=t54, out=r54);
    Register(in=in, load=t55, out=r55);
    Register(in=in, load=t56, out=r56);
    Register(in=in, load=t57, out=r57);
    Register(in=in, load=t58, out=r58);
    Register(in=in, load=t59, out=r59);
    Register(in=in, load=t60, out=r60);
    Register(in=in, load=t61, out=r61);
    Register(in=in, load=t62, out=r62);
    Register(in=in, load=t63, out=r63);
    Mux8Way16(a=r0, b=r1, c=r2, d=r3, e=r4, f=r5, g=r6, h=r7, sel=address[3..5], out=m0);
    Mux8Way16(a=r8, b=r9, c=r10, d=r11, e=r12, f=r13, g=r14, h=r15, sel=address[3..5], out=m1);
    Mux8Way16(a=r16, b=r17, c=r18, d=r19, e=r20, f=r21, g=r22, h=r23, sel=address[3..5], out=m2);
    Mux8Way16(a=r24, b=r25, c=r26, d=r27, e=r28, f=r29, g=r30, h=r31, sel=address[3..5], out=m3);
    Mux8Way16(a=r32, b=r33, c=r34, d=r35, e=r36, f=r37, g=r38, h=r39, sel=address[3..5], out=m4);
    Mux8Way16(a=r40, b=r41, c=r42, d=r43, e=r44, f=r45, g=r46, h=r47, sel=address[3..5], out=m5);
    Mux8Way16(a=r48, b=r49, c=r50, d=r51, e=r52, f=r53, g=r54, h=r55, sel=address[3..5], out=m6);
    Mux8Way16(a=r56, b=r57, c=r58, d=r59, e=r60, f=r61, g=r62, h=r63, sel=address[3..5], out=m7);
    Mux8Way16(a=m0, b=m1, c=m2, d=m3, e=m4, f=m5, g=m6, h=m7, sel=address[0..2], out=out);
}
