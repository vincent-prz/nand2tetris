function Primes.primes 3
push constant 2
pop local 0
push constant 0
pop local 1
push argument 0
call Array.new 1
pop local 2
label WHILE_EXP0
push local 1
push argument 0
lt
not
if-goto WHILE_END0
push local 0
call Primes.isPrime 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 2
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
add
pop local 1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 2
return
function Primes.isPrime 3
push constant 2
pop local 0
push argument 0
call Math.sqrt 1
push constant 1
add
pop local 1
label WHILE_EXP0
push local 0
push local 1
lt
not
if-goto WHILE_END0
push argument 0
push local 0
push argument 0
push local 0
call Math.divide 2
call Math.multiply 2
sub
pop local 2
push local 2
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
not
return
